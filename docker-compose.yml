version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - document-service
      - syllabus-service
      - assessment-service
      - user-service
      - scheduler-service
      - analytics-service
      - compliance-service
      - collaboration-service
      - visualization-service
      - integration-service
      - security-service
    networks:
      - aptp-network

  # Core Backend Services (C++ & Python)
  document-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=document
    volumes:
      - ./backend/document:/app/document
    ports:
      - "8001:8001"
    environment:
      - SERVICE_PORT=8001
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=document_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  syllabus-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=syllabus
    volumes:
      - ./backend/syllabus:/app/syllabus
    ports:
      - "8002:8002"
    environment:
      - SERVICE_PORT=8002
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=syllabus_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  assessment-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=assessment
    volumes:
      - ./backend/assessment:/app/assessment
    ports:
      - "8003:8003"
    environment:
      - SERVICE_PORT=8003
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=assessment_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  user-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=user-management
    volumes:
      - ./backend/user-management:/app/user-management
    ports:
      - "8004:8004"
    environment:
      - SERVICE_PORT=8004
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=user_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  scheduler-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=scheduler
    volumes:
      - ./backend/scheduler:/app/scheduler
    ports:
      - "8005:8005"
    environment:
      - SERVICE_PORT=8005
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=scheduler_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  analytics-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=analytics
    volumes:
      - ./backend/analytics:/app/analytics
    ports:
      - "8006:8006"
    environment:
      - SERVICE_PORT=8006
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=analytics_db
      - TIMESCALE_HOST=timescaledb
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - timescaledb
      - redis
    networks:
      - aptp-network

  compliance-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=compliance
    volumes:
      - ./backend/compliance:/app/compliance
    ports:
      - "8007:8007"
    environment:
      - SERVICE_PORT=8007
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=compliance_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  collaboration-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=collaboration
    volumes:
      - ./backend/collaboration:/app/collaboration
    ports:
      - "8008:8008"
    environment:
      - SERVICE_PORT=8008
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=collaboration_db
      - REDIS_HOST=redis
      - MONGODB_HOST=mongodb
    depends_on:
      - postgres
      - redis
      - mongodb
    networks:
      - aptp-network

  visualization-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=visualization
    volumes:
      - ./backend/visualization:/app/visualization
    ports:
      - "8009:8009"
    environment:
      - SERVICE_PORT=8009
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=visualization_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  integration-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=integration
    volumes:
      - ./backend/integration:/app/integration
    ports:
      - "8010:8010"
    environment:
      - SERVICE_PORT=8010
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=integration_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  security-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - SERVICE=security
    volumes:
      - ./backend/security:/app/security
    ports:
      - "8011:8011"
    environment:
      - SERVICE_PORT=8011
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=security_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - aptp-network

  # AI/ML Microservices
  document-intelligence:
    build:
      context: ./microservices/document-intelligence
      dockerfile: Dockerfile
    volumes:
      - ./microservices/document-intelligence:/app
    ports:
      - "9001:9001"
    environment:
      - SERVICE_PORT=9001
      - MONGODB_HOST=mongodb
    depends_on:
      - mongodb
    networks:
      - aptp-network

  predictive-analytics:
    build:
      context: ./microservices/predictive-analytics
      dockerfile: Dockerfile
    volumes:
      - ./microservices/predictive-analytics:/app
    ports:
      - "9002:9002"
    environment:
      - SERVICE_PORT=9002
      - TIMESCALE_HOST=timescaledb
    depends_on:
      - timescaledb
    networks:
      - aptp-network

  adaptive-learning:
    build:
      context: ./microservices/adaptive-learning
      dockerfile: Dockerfile
    volumes:
      - ./microservices/adaptive-learning:/app
    ports:
      - "9003:9003"
    environment:
      - SERVICE_PORT=9003
      - POSTGRES_HOST=postgres
      - MONGODB_HOST=mongodb
    depends_on:
      - postgres
      - mongodb
    networks:
      - aptp-network

  gamification:
    build:
      context: ./microservices/gamification
      dockerfile: Dockerfile
    volumes:
      - ./microservices/gamification:/app
    ports:
      - "9004:9004"
    environment:
      - SERVICE_PORT=9004
      - MONGODB_HOST=mongodb
      - REDIS_HOST=redis
    depends_on:
      - mongodb
      - redis
    networks:
      - aptp-network

  # Databases & Infrastructure
  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=document_db,syllabus_db,assessment_db,user_db,scheduler_db,analytics_db,compliance_db,collaboration_db,visualization_db,integration_db,security_db
    ports:
      - "5432:5432"
    networks:
      - aptp-network

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=timescale_db
    ports:
      - "5433:5432"
    networks:
      - aptp-network

  mongodb:
    image: mongo:5
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    networks:
      - aptp-network

  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - aptp-network

volumes:
  postgres_data:
  timescaledb_data:
  mongodb_data:
  redis_data:

networks:
  aptp-network:
    driver: bridge
