version: '3.8'

services:
  core-platform-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core-platform-service
    ports:
      - "50051:50051"  # gRPC port
      - "9100:9100"    # Metrics port
    environment:
      - CPS_SERVER_HOST=0.0.0.0
      - CPS_SERVER_PORT=50051
      - CPS_METRICS_HOST=0.0.0.0
      - CPS_METRICS_PORT=9100
      - CPS_AUTH_JWT_SECRET=${JWT_SECRET:-default_secret_key_change_in_production}
      - CPS_AUTH_TOKEN_EXPIRY_SECONDS=3600
      - CPS_AUTH_REFRESH_EXPIRY_SECONDS=86400
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - platform-network
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    networks:
      - platform-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - platform-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  platform-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: