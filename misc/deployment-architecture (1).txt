apiVersion: v1
kind: Namespace
metadata:
  name: pilot-training-platform
  labels:
    name: pilot-training-platform
---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: pilot-training-platform
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: pilot-training-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: advancedpilottraining/api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8080"
        - name: DOCUMENT_SERVICE_URL
          value: "http://document-service:8080"
        - name: SYLLABUS_SERVICE_URL
          value: "http://syllabus-service:8080"
        - name: ASSESSMENT_SERVICE_URL
          value: "http://assessment-service:8080"
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:8080"
        - name: SCHEDULER_SERVICE_URL
          value: "http://scheduler-service:8080"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
# Auth Service
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: pilot-training-platform
spec:
  selector:
    app: auth-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: advancedpilottraining/auth-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: encryption-key
              key: key
        resources:
          limits:
            cpu: "300m"
            memory: "512Mi"
          requests:
            cpu: "150m"
            memory: "256Mi"
---
# Document Service
apiVersion: v1
kind: Service
metadata:
  name: document-service
  namespace: pilot-training-platform
spec:
  selector:
    app: document-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: document-service
  template:
    metadata:
      labels:
        app: document-service
    spec:
      containers:
      - name: document-service
        image: advancedpilottraining/document-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: STORAGE_BUCKET
          value: "advancedpilottraining-documents"
        - name: AI_SERVICE_URL
          value: "http://ai-service:8080"
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: document-cache
          mountPath: /app/cache
      volumes:
      - name: document-cache
        emptyDir: {}
---
# Syllabus Service
apiVersion: v1
kind: Service
metadata:
  name: syllabus-service
  namespace: pilot-training-platform
spec:
  selector:
    app: syllabus-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: syllabus-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: syllabus-service
  template:
    metadata:
      labels:
        app: syllabus-service
    spec:
      containers:
      - name: syllabus-service
        image: advancedpilottraining/syllabus-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: DOCUMENT_SERVICE_URL
          value: "http://document-service:8080"
        - name: AI_SERVICE_URL
          value: "http://ai-service:8080"
        resources:
          limits:
            cpu: "500m"
            memory: "768Mi"
          requests:
            cpu: "250m"
            memory: "384Mi"
---
# Assessment Service
apiVersion: v1
kind: Service
metadata:
  name: assessment-service
  namespace: pilot-training-platform
spec:
  selector:
    app: assessment-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assessment-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: assessment-service
  template:
    metadata:
      labels:
        app: assessment-service
    spec:
      containers:
      - name: assessment-service
        image: advancedpilottraining/assessment-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: SYLLABUS_SERVICE_URL
          value: "http://syllabus-service:8080"
        - name: AI_SERVICE_URL
          value: "http://ai-service:8080"
        resources:
          limits:
            cpu: "500m"
            memory: "768Mi"
          requests:
            cpu: "250m"
            memory: "384Mi"
---
# Analytics Service
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: pilot-training-platform
spec:
  selector:
    app: analytics-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
      - name: analytics-service
        image: advancedpilottraining/analytics-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: TIMESCALEDB_HOST
          valueFrom:
            secretKeyRef:
              name: timescaledb-credentials
              key: host
        - name: TIMESCALEDB_PORT
          valueFrom:
            secretKeyRef:
              name: timescaledb-credentials
              key: port
        - name: TIMESCALEDB_USER
          valueFrom:
            secretKeyRef:
              name: timescaledb-credentials
              key: username
        - name: TIMESCALEDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: timescaledb-credentials
              key: password
        - name: AI_SERVICE_URL
          value: "http://ai-service:8080"
        resources:
          limits:
            cpu: "1000m"
            memory: "1.5Gi"
          requests:
            cpu: "500m"
            memory: "768Mi"
---
# Scheduler Service
apiVersion: v1
kind: Service
metadata:
  name: scheduler-service
  namespace: pilot-training-platform
spec:
  selector:
    app: scheduler-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scheduler-service
  template:
    metadata:
      labels:
        app: scheduler-service
    spec:
      containers:
      - name: scheduler-service
        image: advancedpilottraining/scheduler-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        resources:
          limits:
            cpu: "500m"
            memory: "768Mi"
          requests:
            cpu: "250m"
            memory: "384Mi"
---
# AI Service
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: pilot-training-platform
spec:
  selector:
    app: ai-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      containers:
      - name: ai-service
        image: advancedpilottraining/ai-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: PYTHON_PATH
          value: "/usr/bin/python3"
        - name: SCRIPT_DIR
          value: "/app/ai-models"
        - name: ZMQ_ENDPOINT
          value: "tcp://*:5555"
        resources:
          limits:
            cpu: "2000m"
            memory: "4Gi"
          requests:
            cpu: "1000m"
            memory: "2Gi"
        volumeMounts:
        - name: ai-models
          mountPath: /app/ai-models
        - name: shared-memory
          mountPath: /dev/shm
      volumes:
      - name: ai-models
        persistentVolumeClaim:
          claimName: ai-models-pvc
      - name: shared-memory
        emptyDir:
          medium: Memory
---
# Workflow Engine Service
apiVersion: v1
kind: Service
metadata:
  name: workflow-service
  namespace: pilot-training-platform
spec:
  selector:
    app: workflow-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workflow-service
  template:
    metadata:
      labels:
        app: workflow-service
    spec:
      containers:
      - name: workflow-service
        image: advancedpilottraining/workflow-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: DOCUMENT_SERVICE_URL
          value: "http://document-service:8080"
        - name: AI_SERVICE_URL
          value: "http://ai-service:8080"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:8080"
        resources:
          limits:
            cpu: "500m"
            memory: "768Mi"
          requests:
            cpu: "250m"
            memory: "384Mi"
---
# Notification Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: pilot-training-platform
spec:
  selector:
    app: notification-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: advancedpilottraining/notification-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: host
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: port
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: username
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: password
        resources:
          limits:
            cpu: "300m"
            memory: "512Mi"
          requests:
            cpu: "150m"
            memory: "256Mi"
---
# Collaboration Service
apiVersion: v1
kind: Service
metadata:
  name: collaboration-service
  namespace: pilot-training-platform
spec:
  selector:
    app: collaboration-service
  ports:
  - port: 8080
    targetPort: 8080
  - port: 8081
    targetPort: 8081
    name: websocket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collaboration-service
  namespace: pilot-training-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: collaboration-service
  template:
    metadata:
      labels:
        app: collaboration-service
    spec:
      containers:
      - name: collaboration-service
        image: advancedpilottraining/collaboration-service:latest
        ports:
        - containerPort: 8080
        - containerPort: 8081
          name: websocket
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        resources:
          limits:
            cpu: "800m"
            memory: "1Gi"
          requests:
            cpu: "400m"
            memory: "512Mi"
---
# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
  namespace: pilot-training-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: managed-nfs-storage
---
# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: pilot-training-platform
type: Opaque
data:
  host: cG9zdGdyZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbA== # postgres.default.svc.cluster.local
  port: NTQzMg== # 5432
  username: YWRtaW4= # admin
  password: Y2hhbmdlbWU= # changeme
---
apiVersion: v1
kind: Secret
metadata:
  name: timescaledb-credentials
  namespace: pilot-training-platform
type: Opaque
data:
  host: dGltZXNjYWxlZGIuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbA== # timescaledb.default.svc.cluster.local
  port: NTQzMg== # 5432
  username: YWRtaW4= # admin
  password: Y2hhbmdlbWU= # changeme
---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: pilot-training-platform
type: Opaque
data:
  key: Y2hhbmdlbWVjaGFuZ2VtZWNoYW5nZW1lY2hhbmdlbWVjaGFuZ2VtZWNoYW5nZW1lY2hhbmdlbWU= # changemechangemechangemechangemechangemechangeme
---
apiVersion: v1
kind: Secret
metadata:
  name: encryption-key
  namespace: pilot-training-platform
type: Opaque
data:
  key: MWYyZDFlMmU2N2E5YjhiNGY3YThjOTRkZWE4YTBlYTU= # 1f2d1e2e67a9b8b4f7a8c94dea8a0ea5
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp-credentials
  namespace: pilot-training-platform
type: Opaque
data:
  host: c210cC5leGFtcGxlLmNvbQ== # smtp.example.com
  port: NTg3 # 587
  username: bm90aWZpY2F0aW9ucw== # notifications
  password: Y2hhbmdlbWU= # changeme
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: pilot-training-platform
type: Opaque
data:
  host: cmVkaXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbA== # redis.default.svc.cluster.local
  port: NjM3OQ== # 6379
  password: Y2hhbmdlbWU= # changeme
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pilot-training-platform-ingress
  namespace: pilot-training-platform
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - api.pilottrainingplatform.com
    secretName: pilot-training-tls
  rules:
  - host: api.pilottrainingplatform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
---
# ConfigMaps
apiVersion: v1
kind: ConfigMap
metadata:
  name: logging-config
  namespace: pilot-training-platform
data:
  log-level: "info"
  log-format: "json"
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: pilot-training-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
# Blue-Green Deployment Configuration (using Argo Rollouts)
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: api-gateway-rollout
  namespace: pilot-training-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: advancedpilottraining/api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8080"
        - name: DOCUMENT_SERVICE_URL
          value: "http://document-service:8080"
        - name: SYLLABUS_SERVICE_URL
          value: "http://syllabus-service:8080"
        - name: ASSESSMENT_SERVICE_URL
          value: "http://assessment-service:8080"
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:8080"
        - name: SCHEDULER_SERVICE_URL
          value: "http://scheduler-service:8080"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
  strategy:
    blueGreen:
      activeService: api-gateway
      previewService: api-gateway-preview
      autoPromotionEnabled: false
---
# Centralized Logging with Fluentd
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: pilot-training-platform
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.14-debian-elasticsearch7-1
        env:
          - name: FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch.logging"
          - name: FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENTD_SYSTEMD_CONF
            value: "disable"
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: fluentd-config
---
# ServiceAccount for Fluentd
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: pilot-training-platform
---
# Role for Fluentd
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
# RoleBinding for Fluentd
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: pilot-training-platform